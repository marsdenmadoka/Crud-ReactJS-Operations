{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","console","log","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorSecondName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorid","add","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsready","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8ccd2fb4.chunk.js","sourcesContent":["import React, { Profiler } from \"react\"\nimport { NavLink } from 'react-router-dom'\nimport {connect} from \"react-redux\"\nimport {signOut} from '../../store/actions/authActions'\nconst SignedInLinks = (props) => {\n    return(\n     <ul className=\"right\">\n         <li><NavLink to='/'>Home</NavLink> </li>\n    <li><NavLink to='/create'>New Project</NavLink></li>\n    <li><a onClick={props.signOut}>Log Out</a></li>\n    <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n     </ul>\n    )\n}\n\nconst mapDispatchToProps=(dispatch)=>{\nreturn{\n    signOut:()=> dispatch(signOut())\n}\n\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","import { getFirebase } from \"react-redux-firebase\";\n\nexport const signIn = (credentials)=> {\nreturn(dispatch,getState,{getFirebase})=>{\n    const firebase=getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n    ).then(()=>{\n        dispatch({type:'LOGIN_SUCCESS'})\n    }).catch((err)=>{\n        dispatch({type:'LOGIN_ERROR',err})\n    });\n}\n}\n\nexport const signOut = () =>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT_SUCCESS'});\n        });\n    }\n}\nexport const signUp=(newUser)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n\nconst firebase=getFirebase();\nconst firestore=getFirestore();\n\nfirebase.auth().createUserWithEmailAndPassword(\nnewUser.email,\nnewUser.password\n).then((resp)=>{\nreturn firestore.collection('users').doc(resp.user.uid).set({\n    firstName:newUser.firstName,\n    lastName:newUser.lastName,\n    initials:newUser.firstName[0]+newUser.lastName[0] //cocatination\n})\n}).then(()=>{\n    dispatch({type:'SIGNUP_SUCCESS'})\n}).catch(err => {\n    dispatch({type:'SIGNUP_ERROR',err})\n\n})\n}\n}","import React from \"react\"\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n     <ul className=\"right\">\n    <li><NavLink to='/signup'>SignUp</NavLink></li>\n    <li><NavLink to='/signin'>Login</NavLink></li>\n\n     </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from \"./SignedInLinks\"\nimport SignedOutLinks from \"./SignedOutLinks\"\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => { \n    const { auth,profile }=props;\n    console.log(auth)\n    const links =auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/> //if user is signed displayed the signoutlnks if they signout display the signinLink\n    return(\n     <nav className=\"nav-wrapper grey darken-3\">\n     <div className=\"container\">\n     <Link to='/' className=\"brand-logo\">Madoka plan</Link>\n        {links}   {/* dislpaying the signinLink and SignedInLinks link */}\n     </div>\n     </nav>\n    )\n}\nconst mapStateToProps =(state)=>{\n    return{\n auth:state.firebase.auth,\n profile:state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from \"moment\"\nconst Notifications =(props) =>{\n    const {notifications} = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                     {notifications && notifications.map(item=>{\n                         return(\n                             <li key={item.id}>\n                                 <span className=\"pink-text\">{item.user} </span>\n                         <span>{item.content}</span>\n                         <div className=\"grey-text note-date\">\n                             {moment(item.time.toDate()).fromNow()}\n                         </div>\n                             </li>\n                         )\n                     })}\n                    </ul>\n                     </div>\n                 </div>\n                </div>\n    )\n}\n\nexport default Notifications","import React from \"react\"\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) =>{\n    return(\n<div className=\"card z-depth-0 project-summary\">\n<div className=\"card-content grey-text text-darken-3\"></div>\n <span className=\"card-title\">{project.title}</span>\n {/* <p>{project.content}</p> */}\n <p>posted by {project.authorFirstName} {project.authorSecondName}</p>\n    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div> \n    )\n}\n\nexport default ProjectSummary","import React  from \"react\"\nimport  ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\nconst ProjectList = ({projects}) =>{ //fetching the projects props from dashboard.js\n    return(\n        <div className=\"project-list section\">\n            {projects && projects.map(project=>{\n               return (\n                   <Link to={'/project/' + project.id} key={project.id}>\n                   <ProjectSummary project={project} />\n                   </Link>\n               ) \n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React,{ Component } from \"react\"\nimport Notifications from \"./Notifications\"\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux' //connect our dashbaord to the store/redux\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from  'react-router-dom'\nclass Dashboard extends Component{\n    render(){\n        const { projects,auth,notifications}=this.props;\nif(!auth.uid) return <Redirect to =\"/signin\"/> //if mot loged in return to signup page\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                     <div className=\"col s12 m5 offset-m1\">\n                         <Notifications notifications={notifications}/>\n                     </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state)\n    return{\n projects:state.firestore.ordered.projects, //this state.project.projects came from  our root reducer //please confirm\n auth: state.firebase.auth,\n notifications:state.firestore.ordered.notifications,   \n}\n\n}\nexport default compose(connect\n    (mapStateToProps),\n    firestoreConnect([\n      { collection:'projects', orderBy:['createdAt','desc']},\n      { collection:'notifications',limit:3, orderBy:['time','desc']} //show a limit of 3 notifications  \n    ]) \n    )(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from  'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails=(props)=> {\n    const { project,auth } = props;\n    //const {auth}=this.props;\n    if(!auth.uid) return <Redirect to =\"/signin\"/> \n    if (project) {\n        return(\n        <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n    <span className=\"card-title\">{project.title}</span>\n       <p>{project.content}</p>\n            <div className=\"card-action gret lighten-4 grey-text\"></div>\n    <div>posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n          </div>  \n          </div>\n          )\n    } else{\n\n        return (\n      <div className=\"container center\">\n          <p>loading projects..</p>\n      </div>\n            )\n    }\n\n    \n}\n\nconst mapStateToProps = (state, ownProps)=>{\nconsole.log(state)\n    const id =ownProps.match.params.id\n    const projects = state.firestore.data.projects;\n    const project=projects?projects[id]:null\n    return{\n     project:project,\n     auth:state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection:'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from  'react-router-dom'\nclass SignIn extends Component {\n    state={\n        email:'',\n        password:''\n    }\n    handleChange =(e)=>{\n        console.log(e)\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        //console.log(this.state)\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError,auth }=this.props;\n    if(auth.uid) return <Redirect to =\"/\"/>\n        return (\n            <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n     <h5 className=\"grey-text text-darken-3\">SIgn In</h5>\n\n     <div className=\"input-field\">\n    <label htmlFor=\"email\">Email</label>\n    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n        </div>\n\n     <div className=\"input-field\">\n    <label htmlFor=\"password\">Password</label>\n    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n\n                    <div className=\"red-text center\">\n                  {authError ? <p>{authError}</p>:null}\n                    </div>\n                </div>\n          \n                </form>  \n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state)=>{\n    return{\n        authError:state.auth.authError,\n        auth:state.firebase.auth //confirms the state  of firebase bafore redirect i.e it must e there for a ridect to work\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signIn:(creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport {Redirect} from  'react-router-dom'\nimport {connect} from \"react-redux\"\nimport {signUp} from '../../store/actions/authActions'\nclass SignUp extends Component {\n    state={\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n    handleChange =(e)=>{\n        console.log(e)\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        console.log(e)\n        e.preventDefault();\n        console.log(this.state)\n        this.props.signUp(this.state)\n    }\n    render() {\n        const {auth,authError }=this.props;\n        if(auth.uid) return <Redirect to =\"/\"/>\n        return (\n            <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n     <h5 className=\"grey-text text-darken-3\">SIgn Up</h5>\n\n     <div className=\"input-field\">\n    <label htmlFor=\"email\">Email</label>\n    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n    </div>\n\n     <div className=\"input-field\">\n    <label htmlFor=\"password\">Password</label>\n    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n     </div>\n\n       \n     <div className=\"input-field\">\n    <label htmlFor=\"firstName\">First Name</label>\n    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n     </div>  \n\n     <div className=\"input-field\">\n    <label htmlFor=\"lastName\">Last Name</label>\n    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n     </div>\n\n     <div className=\"input-field\">\n     <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n     <div className=\"red-text center\">\n        {authError ? <p>{authError}</p>:null}\n     </div>\n    </div>\n     </form>  \n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n} \n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signUp:(newUser) => dispatch(signUp(newUser))\n    }\n\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\"\nimport { createProject } from '../../store/actions/projectActions' //action creator\nimport {Redirect} from  'react-router-dom'\nclass CreateProject extends Component {\n    state={\n        title:'',\n        content:''\n    }\n    handleChange =(e)=>{\n        console.log(e)\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        //console.log(this.state)\n        this.props.createProject(this.state) //pass the project into the action\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth}=this.props;\nif(!auth.uid) return <Redirect to =\"/signin\"/> \n        return (\n            <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n     <h5 className=\"grey-text text-darken-3\">CreateProject</h5>\n\n     <div className=\"input-field\">\n    <label htmlFor=\"title\">Title</label>\n    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n        </div>\n\n     <div className=\"input-field\">\n    <label htmlFor=\"content\">Content</label>\n    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n                </form>  \n            </div>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth\n    }\n}\nconst mapDispatchToprops = (dispatch) => {\n    return{\n        createProject:(project)=> dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToprops)(CreateProject)\n","//making the actions send them to reducers to take and use the actons\nexport const createProject=(project)=>{\n    return (dispatch,getState,{ getFirebase,getFirestore })=>{ // the dispatch is want dispatches the action to the reducer the getState is what we use to change our state     when we use thunk we can return a function\n       //make async call to database\n       const firestore = getFirestore();\n       const profile=getState().firebase.profile;\n       const authorid=getState().firebase.auth.uid; \n       firestore.collection('projects').add({ //projects our firestore collection\n       ...project, //title and content\n     authorFirstName:profile.firstName,\n     authorSecondName:profile.lastName,\n     authorId:authorid,\n     createdAt:new Date()\n       }).then(() => {\n        dispatch({type:'CREATE_PROJECT',project});\n       }).catch((err) => {\n    dispatch({type:\"CREATE_PROJECT_ERROR\",err});\n       })\n    }\n};\n\n\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch,Route } from \"react-router-dom\"\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from  './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from \"./components/auth/SignIn\"\nimport SignUp from \"./components/auth/SignUp\"\nimport CreateProject from \"./components/projects/CreateProject\"\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route exact path='/signin' component={SignIn}/>\n          <Route exact path='/signup' component={SignUp}/>\n          <Route exact path='/create' component={CreateProject}/>\n        </Switch>\n      </div>  \n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\n    authError:null\n}\n\nconst authReducer = (state=initState,action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log(\"login eror\")\n            return {\n                ...state,\n                authError:\"login failed\"\n            }\n            case 'LOGIN_SUCCESS':\n                console.log(\"login success\")\n                return{\n                    ...state,\n                    authError:null\n                }\n             case 'SIGNOUT_SUCCESS':\n              console.log(\"signOut success\")\n              return state;\n               case'SIGNUP_SUCCESS':\n               console.log(\"signup sucess\") \n               return{\n                ...state,\n                authError:null\n            }\n            case 'SIGNUP_ERROR':\n                console.log(\"signup error\") \n                return{\n                    ...state,\n                    authError:action.err.message\n                }      \n\n                default:\n                    return state;\n    }\n}\n\nexport default authReducer","//taking the action\nconst initState={\n    projects:[\n        {id:'1',title:'help me find preach',content:'blan qqqqblan blan'},\n        {id:'2',title:'find preach',content:'blan blan qqqblan'},\n        {id:'3',title:'me preach',content:'blan blan hhhhblan'},\n    ]\n}\n\nconst projectReducer = (state=initState,action) => {\nswitch(action.type){\n    case 'CREATE_PROJECT':\n        console.log('created project', action.project)\n        return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error'+action.err)\n            return state;\n            default:\n                return state;\n}\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux' //help us to combine our reducers\nimport{ firestoreReducer } from 'redux-firestore' //syncing /fetching data from firestore\nimport { firebaseReducer} from 'react-redux-firebase'\n//combining the reducers\nconst rootReducer = combineReducers({\n    auth: authReducer, //this reducer will work and update for authencation property\n    project:projectReducer, //this reducer will work and update for project creation property in the state\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n});\n\nexport default  rootReducer //we will export this to index.js which is our main reducer/redux data store"," // Your web app's Firebase configuration\n import firebase from \"firebase/app\"\n import 'firebase/firestore'\n import 'firebase/auth'\n\n var firebaseConfig = {\n    apiKey: \"AIzaSyAp8sKIQJfA5mHoQUoNtV7_vpvPrsTOwgE\",\n    authDomain: \"reactfirebaseapp-ae65a.firebaseapp.com\",\n    databaseURL: \"https://reactfirebaseapp-ae65a.firebaseio.com\",\n    projectId: \"reactfirebaseapp-ae65a\",\n    storageBucket: \"reactfirebaseapp-ae65a.appspot.com\",\n    messagingSenderId: \"391484763443\",\n    appId: \"1:391484763443:web:d1c4dc8b49c92568942246\",\n    measurementId: \"G-359D0S2TN9\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots:true})\n  \n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//creating our redux(central data store)\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux' //help us to bind redux with our reactApp\nimport thunk from 'redux-thunk'//middle ware for dispathicng action\nimport {reduxFirestore,getFirestore } from 'redux-firestore'\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nconst store=createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })), \n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsready:true})\n  )\n  ); \n\n  // store.firebaseAuthIsReady.then(() => {\n   \n  // })\n\n  ReactDOM.render(<Provider store={store}><App /></Provider> ,document.getElementById('root')); // this <Provider store={store}><App /></Provider> binds our redux to reactApp\n  serviceWorker.unregister();\n"],"sourceRoot":""}